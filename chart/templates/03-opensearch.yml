{{- $dirinit_image := .Values.image.dirinit_container_override | default (printf "%s/dirinit:%s" .Values.image.repository .Chart.AppVersion) }}
{{- $opensearch_image := .Values.image.opensearch_container_override | default (printf "%s/opensearch:%s" .Values.image.repository .Chart.AppVersion) }}
{{- if .Values.opensearch.enabled }}

{{- $os_claim := ternary .Values.storage.production.claims.opensearch_claim .Values.storage.development.claims.opensearch_claim .Values.is_production }}
{{- $backup_claim := ternary .Values.storage.production.claims.opensearch_backup_claim .Values.storage.development.claims.opensearch_backup_claim .Values.is_production }}

---
apiVersion: v1
kind: Service
metadata:
  name: opensearch
spec:
  ports:
    - port: 9200
      protocol: TCP
      name: http
  selector:
    name: opensearch

---
apiVersion: v1
kind: Service
metadata:
  name: opensearch-headless
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 9200
      protocol: TCP
      name: http
    - port: 9300
      protocol: TCP
      name: transport
  selector:
    name: opensearch

---
apiVersion: v1
kind: Secret
metadata:
  name: opensearch-keystore
type: Opaque

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: opensearch
spec:
  selector:
    matchLabels:
      name: opensearch
  serviceName: opensearch-headless
{{- if .Values.opensearch.singleNode }}
  replicas: 1
{{- else }}
  replicas: {{ .Values.opensearch.replicas }}
{{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ $os_claim.name }}-claim
      spec:
        storageClassName: {{ $os_claim.className }}
        accessModes:
          - {{ default "ReadWriteOnce" $os_claim.accessMode }}
        volumeMode: Filesystem
        resources:
          requests:
            storage: {{ $os_claim.size }}
        {{- if eq $os_claim.className "nfs" }}
        volumeName: {{ $os_claim.name }}-volume
        {{- end }}
    - metadata:
        name: {{ $backup_claim.name }}-claim
      spec:
        storageClassName: {{ $backup_claim.className }}
        accessModes:
          - {{ default "ReadWriteOnce" $backup_claim.accessMode }}
        volumeMode: Filesystem
        resources:
          requests:
            storage: {{ $backup_claim.size }}
        {{- if eq $backup_claim.className "nfs" }}
        volumeName: {{ $backup_claim.name }}-volume
        {{- end }}
  template:
    metadata:
      labels:
        name: opensearch
    spec:
      containers:
      - name: opensearch-container
        image: "{{ $opensearch_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        ports:
          - name: http
            protocol: TCP
            containerPort: 9200
          - name: transport
            protocol: TCP
            containerPort: 9300
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: opensearch-env
        env:
          - name: VIRTUAL_HOST
            value: "os.malcolm.local"
        volumeMounts:
          - mountPath: /var/local/ca-trust/configmap
            name: opensearch-var-local-catrust-volume
          - mountPath: /var/local/curlrc/secretmap
            name: opensearch-opensearch-curlrc-secret-volume
          - mountPath: "/usr/share/opensearch/data"
            name: {{ $os_claim.name }}-claim
          - mountPath: "/opt/opensearch/backup"
            name: {{ $backup_claim.name }}-claim
          - name: opensearch-keystore-default-secret-volume
            mountPath: /usr/share/opensearch/config/bootstrap/secretmap
          - name: {{ $os_claim.name }}-claim
            mountPath: /usr/share/opensearch/config/persist
            subPath: "opensearch"
      initContainers:
      - name: opensearch-dirinit-container
        image: "{{ $dirinit_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/config:opensearch;/data/opensearch:nodes"
        volumeMounts:
          - name: {{ $os_claim.name }}-claim
            mountPath: "/data/opensearch"
          - name: {{ $os_claim.name }}-claim
            mountPath: "/data/config"
      volumes:
        - name: opensearch-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: opensearch-opensearch-curlrc-secret-volume
          secret:
            secretName: opensearch-curlrc
        - name: opensearch-keystore-default-secret-volume
          secret:
            secretName: opensearch-keystore
{{- end }}